import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http , Headers, Response,RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { MessagePropertiesService } from '../../services/message-properties.service';
import {EnvConfigurationService} from '../../services/env-configuration.service';
import {Observable} from 'rxjs/Observable';
import {of} from 'rxjs/observable/of';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/switchMap';
import 'rxjs/add/operator/merge';


declare var $: any; 
declare var jQuery: any;
declare var swal: any;

@Component({
  selector: 'app-sales-order-details',
  templateUrl: './sales-order-details.component.html',
  styleUrls: ['./sales-order-details.component.css']
})
export class SalesOrderDetailsComponent implements OnInit {
    createSalesOrderForm:FormGroup;
    filterSalesOrderForm:FormGroup;
    createSalesOrderPage:boolean=false;
    salesOrderDetails:boolean=false;
    saleType:any;
    checked:boolean=false;
    indeterminate:boolean=false;
    saleOrderMessages:any;
    bpId:any;
    orgId:any;
    accessObjectId:any;
    pageNum:any;
    pageSize:any;
    sortBy:any;
    paginationCount:any;
    paginationArray:any;
    startIndex:any;
    endIndex:any;
    totalEndCount:any;
    sortOrder:any;
    sortNum:any;
    searchFilterByMaterialCd:any;
    salesListPayload:any;
    salesOrderDetailsList:any;
    salesOrderDetailslength:any;
    customerNames:any;
    model: any;
    clickedItem:any;
    searching = false;
    searchFailed = false;
    hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);

  constructor(private http: Http, private formBuilder: FormBuilder,
          private router: Router,private ref: ChangeDetectorRef,private app:AppComponent, private messagesService:MessagePropertiesService,
          private commonService:CommonService,private environment:EnvConfigurationService) {
      this.app.isActive=true;
      this.salesOrderDetails=true;
      this.createSalesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
          'customer'   : ['', Validators.required],
          'orderType' : ['', Validators.required], 
        });
      this.filterSalesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
          'custName'   : ['', Validators.required],
          'fromDate' : ['', Validators.required], 
          'toDate' : ['', Validators.required], 
          'status' : ['', Validators.required], 
        });
      this.checked=false;
      this.indeterminate=false;
      this.saleOrderMessages = messagesService.sales_order_details_msg;
      this.bpId=localStorage.getItem("bpId");
      this.orgId=localStorage.getItem("orgId");
      this.accessObjectId=localStorage.getItem("Sales Order");
      this.pageNum=1;
      this.pageSize=10;
      this.sortBy=null;
      this.paginationArray=[];
      this.sortOrder="asc";
      this.sortBy="";
      this.sortNum=1;
      this.salesListPayload={};
      this.salesOrderDetailsList=[];
      this.salesOrderDetailslength=0;
      this.customerNames=[];
      
  }
  ngOnInit() {
      
          $( '.datepicker-init-sale' ).datetimepicker( {
              widgetPositioning: {
                  horizontal: 'left'
              },
              icons: {
                  time: "fa fa-clock-o",
                  date: "fa fa-calendar",
                  up: "fa fa-arrow-up",
                  down: "fa fa-arrow-down",
                  previous: 'fa fa-arrow-left',
                  next: 'fa fa-arrow-right'
              },
              format: 'DD/MM/YYYY',
          } );
      this.salesListPayload['bp_id']=this.bpId;
      this.salesListPayload['cust_id']=null;
      this.salesListPayload['from_date']=null;
      this.salesListPayload['org_id']=this.orgId;
      this.salesListPayload['pg_num']=this.pageNum;
      this.salesListPayload['pg_size']=this.pageSize;
      this.salesListPayload['status']=null;
      this.salesListPayload['to_date']=null;
      setTimeout(()=>{
          var width=$("#mainContent").css("width");
          $(".outbound-footer").css("width",width);
      },50);
      this.getSalesOrderList();
  }
  createSalesOrder(type){
      this.commonService.saleType='Create';
       this.commonService.showOrderType=false;
      $("#createSalesModal").modal("show");
  }
  closeModal(id){
      $("#"+id).modal("hide");
      this.createSalesOrderForm.reset();
  }
  createSalesForm(id){
      $("#"+id).modal("hide");
      const path:any="salesorder/createsalesorder";
      this.router.navigate([path]);
  }
  editSalesOrder(type){
      let flag:boolean=this.commonService.continueAction(type);
  if(flag){
      this.commonService.responseMessages("","Please select atleast one sales order", "warning");
      return false
  }
      this.commonService.saleType='Edit';
      this.commonService.showOrderType=true;
      $("#createSalesModal").modal("show");
  }
  editSalesOrderById(){
      this.commonService.saleType='Edit';
      const path:any="salesorder/createsalesorder";
      this.router.navigate([path]);
  }
  selectAll(event,checkAll,tableId){
      setTimeout(()=>{
          this.commonService.selectAllCheckBoxes(checkAll,tableId)
      },300);
  }
  getReportList(event,tableId){
      setTimeout(()=>{let flag:boolean=this.commonService.checkAction(tableId);
      if(flag){
          this.indeterminate=false;
          this.checked=true;
      }else{
          this.indeterminate=true;
      }
      },400);
      
  }
  printSelectedReports(type){
      let flag:boolean=this.commonService.continueAction(type);
      if(flag){
          this.commonService.responseMessages("","Please select atleast one sales order", "warning");
          return false
      }
  }
  getSalesOrderList(){
      $("#sales-table").hide();
      $('#loadingIcon').show();
      $("#black-overlay").show();
      this.searchFilterByMaterialCd=$("#filterSearch").val();
      var filterVal=this.searchFilterByMaterialCd;
      let url:any=this.environment.getRequiredApi("get_sales_order_list")+"?"
      this.commonService.getData(url, "POST", this.salesListPayload, this.accessObjectId).subscribe((response)=>{
         if(response.status==0){
             this.pageNum=response["data"].pgNum;
             this.pageSize=response["data"].pgSize;
             let recordsCount:number=response["data"].ttlCnt;
             let recordsSize:number=response["data"].pgSize;
             let pagePer:number=recordsCount % recordsSize;
             this.paginationCount=recordsCount/recordsSize;
             if(pagePer==0){
                 this.paginationCount= this.paginationCount;     
               }else{
                  this.paginationCount=this.paginationCount+1; 
               }
             this.paginationArray=[];
             for(let i=1; i<=this.paginationCount; i++){
                 let j=i;
                 this.paginationArray.push(j);    
             }
             this.startIndex=0;
             this.endIndex=this.paginationArray.length;
             this.totalEndCount=this.endIndex-1;
             this.salesOrderDetailsList=response["data"].ex_so_list;
             this.salesOrderDetailslength=this.salesOrderDetailsList.length;
             var pageno=this.pageNum;
             var total=this.paginationArray.length;
             $("#sales-order-table").DataTable().destroy();
             $('#loadingIcon').hide();
             $("#black-overlay").hide();
             setTimeout(function(){
                 var table = $('#sales-order-table').DataTable({
                    "order": [[1,'asc']],
                    retrieve:true,
                    "language": {
                        "emptyTable":     "No data available",
                        "searchPlaceholder" : "Search..."
                    },
                    columnDefs: [ {
                                 "targets": 'no-sort',
                                  "orderable": false
                            } ],
                    bPaginate: false,
                    bInfo:false
                          });
                 $('.pageNum').each(function(i){
                     $(this).removeClass('active-1');
                     $("#previous").removeAttr('style');
                     $("#next").removeAttr('style');
                     $("#"+pageno).addClass('active-1');
                   var selectpreviousPage=pageno-2;
                   var currentpage=pageno-1
                   var selectnextpage=pageno;
                     if(total>5){
                         var count=5;
                       if(i<count){
                           if(pageno!=5 && pageno<5 ){
                                   $("#previous-wrapper").hide(); 
                                   $(this).parent().show();
                               }else{
                                $("#previous-wrapper").show(); 
                               $("#previous-wrapper").attr('style','margin-left:-6px;');
                               $("#page-0").show();
                                $(this).parent().hide();
                                $("#page-"+selectpreviousPage).show();
                               $("#page-"+currentpage).show();
                           }
                       }else{
                         $(this).parent().hide();
                         $("#next-wrapper").show();
                           if(pageno>=5){
                               $("#page-"+selectpreviousPage).show();
                               $("#page-"+currentpage).show();
                               $("#page-"+selectnextpage).show();
                               }
                           var tCount=total-1;
                           var nextCount=total-4;
                         if(i==tCount){
                            $(this).attr('style','margin-left:-6px;');
                            $(this).parent().show();
                         } 
                         if(selectnextpage==total || selectnextpage==tCount || selectpreviousPage==nextCount){
                             $(this).removeAttr('style');
                             $("#next-wrapper").hide();
                         }
                       }    
                     }else{
                         $(this).parent().show();
                     }
                      if(pageno==1){
                           $("#previous").attr('style','background:#f2f4f8; cursor:text;color:#6d6c6c !important;');    
                      }else{
                         if(pageno==total){
                            $("#next").attr('style','background:#f2f4f8; cursor:text;color:#6d6c6c !important;'); 
                         }  
                      }  
               });
                 
                 $('#sales-order-table_filter input').val();
                 $("#searchStock").remove();
                 $("#sales-order-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
                 //$('#sales-order-table_filter input').unbind();
                 $('#sales-order-table_filter input').bind('keyup', function(e) {
                     console.log( 'Currently applied global search: '+this.value);
                     var value=this.value;
                     if(value!=""){
                         $("#filterSearch").val(value); 
                     }else{
                         $("#filterSearch").val(value);
                         $("#refeshStockBalance").click();
                     }
             });
                 $('.searchStock').click(function() {
                     $("#refeshStockBalance").click();
                 });
             },500);
             $("#sales-table").show();
         }else{
             $('#loadingIcon').hide();
             $("#black-overlay").hide();  
             setTimeout(()=>{
                 $("#sales-order-table").DataTable().destroy();
                 $("#sales-order-table").DataTable({
                     "order": [[1,'asc']],
                     retrieve:true,
                     bPaginate:false,
                     "language": {
                         "emptyTable": "No data available",
                         "info": "Showing page _PAGE_ of _PAGES_",
                         "infoFiltered": "(filtered from _MAX_ total records)",
                         "searchPlaceholder" : "Search..."
                       },
                       columnDefs: [ {
                           "targets": 'no-sort',
                            "orderable": false
                      } ],
                      "bInfo":false
                 });
                 $("#searchStock").remove();
                 $("#sales-order-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
             },500);
             
             this.commonService.responseMessages("", response.message, "warning");
             $("#sales-table").show();
         } 
      });
  }
getFilterData(){
    this.salesListPayload['cust_id']=$("#cust-name").val();
    this.salesListPayload['from_date']=$("#from-date").val();
    this.salesListPayload['status']=$("#status-sales").val();
    this.salesListPayload['to_date']=$("#to-date").val();
    this.getSalesOrderList();
}
navigatePreviousPage(){
    let pageNum:number=parseInt(this.pageNum);
    pageNum=pageNum-1;
    if(pageNum!=0){
       this.pageNum=pageNum;
       this.pageSize=$("#showPageSize").val();
       this.getSalesOrderList();
    }else{
        return false    
    }
}
navigateNextPage(pageNum){
    this.pageNum=parseInt(pageNum);
    this.pageSize=$("#showPageSize").val();
    this.getSalesOrderList();
}
navigatePageNext(){
    let pageNum:number=parseInt(this.pageNum);
     pageNum=pageNum+1;
     let count:number=this.paginationArray.length;
     if(pageNum<=count){
         this.pageNum=pageNum;
         this.pageSize=$("#showPageSize").val();  
         this.getSalesOrderList();
    }else{
         return false    
     } 
}

extractData(id,spinnerId,ajaxDropdown){
    let term:any=$("#"+id).val();
    if(term.length ==3){
        $("#"+spinnerId).show();
        let url:any=this.environment.getRequiredApi("find_customers")+"?org_id="+this.orgId+"&bp_id="+this.bpId+"&cust_name="+term+"&";
    this.commonService.getData(url, "GET", "", this.accessObjectId).subscribe(response=>{
        if(response.status==0){
            this.customerNames=response["data"].ex_cust_list;
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
        }else{
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
        }
       
    });
    }else{
       if(term==""){
           this.customerNames=[];
           $("#"+spinnerId).hide();
       } 
    }
}
selectedItem(item,id){
    $("#"+id).val(item.cust_name);
  }
}

