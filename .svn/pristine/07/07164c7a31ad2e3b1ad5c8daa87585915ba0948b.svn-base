import { Component, OnInit, Input,Output, EventEmitter,ChangeDetectorRef} from '@angular/core';
import { Http , Headers, Response,RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';

declare var $: any; 
declare var jQuery: any;
declare var swal: any;

@Component({
  selector: 'app-sales-order',
  templateUrl: './sales-order.component.html',
  styleUrls: ['./sales-order.component.css']
})
export class SalesOrderComponent implements OnInit {
    salesOrderForm:FormGroup;
    @Output()
    @Input() salesSeries:any=""; 
    title:any;
    createSalesBlock:boolean=true;
    outboundDeliberyBlock:boolean=false;
    billingBlock:boolean=false;
    postGoodsBlock:boolean=false;
  constructor(private http: Http, private formBuilder: FormBuilder,
          private router: Router,private ref: ChangeDetectorRef,private app:AppComponent,
          private commonService:CommonService) {
      this.app.isActive=true;
      this.salesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
        });
      this.createSalesBlock=true;
      if(this.router.url=='/billing'){
          this.commonService.saleType='Create';
          this.navigatePath("billing");
      }
      if(this.router.url=='/outbounddelivery'){
          this.commonService.saleType='Create';
          this.navigatePath("outbounddelivery");
      }
      
  }

  ngOnInit() {
      if(this.commonService.saleType=='Create'){
          this.title="Sales Order/ New";
      }else{
          this.title="Edit Sales Order";
      }
      setTimeout(()=>{
          $("#outbound-delivery-table").DataTable({
              "order": [[2,"asc"]],
              bSort:false,
              bPaginate:false,
              "language": {
                  "emptyTable": "No data available",
                  "info": "Showing page _PAGE_ of _PAGES_", 
                  "infoFiltered": "(filtered from _MAX_ total records)"
                },
               "bInfo":false,
               "bFilter":false
          }); 
      },400);
  }
  navigatePath(path){
      if(path=='billing'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=false;
          this.billingBlock=true;
      }
      if(path=='outbounddelivery'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=true;
          this.postGoodsBlock=false;
          this.billingBlock=false;
      }
      if(path=='createsalesorder'){
          this.createSalesBlock=true;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=false;
          this.billingBlock=false;
      }
      if(path=='postgoodsissue'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=true;
          this.billingBlock=false;
      }
      setTimeout(()=>{
          $("#outbound-delivery-table").DataTable().destroy();
          $("#outbound-delivery-table").DataTable({
              "order": [[2,"asc"]],
              bSort:false,
              bPaginate:false,
              "language": {
                  "emptyTable": "No data available",
                  "info": "Showing page _PAGE_ of _PAGES_", 
                  "infoFiltered": "(filtered from _MAX_ total records)"
                },
                "columnDefs": [ {
                    "targets": 'no-sort',
                    "orderable": false,
              } ],
               "bInfo":false,
               "bFilter":false
          }); 
      },500);
  }
}
