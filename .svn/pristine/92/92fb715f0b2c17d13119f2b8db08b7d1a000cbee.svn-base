import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http, Headers, Response, RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { MessagePropertiesService } from '../../services/message-properties.service';
import { EnvConfigurationService } from '../../services/env-configuration.service';
import { ExcelService } from '../../services/excel.service';
declare var $: any;
declare var jQuery: any;

@Component({
    selector: 'app-delivery-report',
    templateUrl: './delivery-report.component.html',
    styleUrls: ['./delivery-report.component.css']
})
export class DeliveryReportComponent implements OnInit {
    public poreportdetailsForm: FormGroup;
    public bpId: string;
    public orgId: string;
    public accessObjId: string;
    public deliveryreportdetailsList: any = [];
    public material: any;
    public ajaxDropdown = false;
    public screenType: any;
    public actionFlag: any;
    public customertypeList: any;
    public emptyFlag: boolean = false;
    public cdListLength: any;
    public gstrdetailslength: any;
    public NEWporeportdetailsList: any = [];
    customerNames:any;
    constructor(private http: Http, private formBuilder: FormBuilder, private environment: EnvConfigurationService,
        private router: Router, private ref: ChangeDetectorRef, private app: AppComponent, private messagesService: MessagePropertiesService,
        private commonService: CommonService, private excelService: ExcelService) {
        this.bpId = localStorage.getItem("bpId");
        this.orgId = localStorage.getItem("orgId");
        this.accessObjId = localStorage.getItem("Reports Gallery")
        this.poreportdetailsForm = new FormBuilder().group(
            {
                'frmDate': ['', Validators.required],
                'toDate': ['', Validators.required],
                'custName' : ['']
            }
        );
        this.actionFlag = true;
        this.deliveryreportdetailsList = [];
        this.cdListLength = 0;
        this.gstrdetailslength = 0;
        this.customerNames=[];
    }
    ngOnInit() {
        $('.datepicker-init').datetimepicker({
            widgetPositioning: {
                horizontal: 'left'
            },
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down",
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right'
            },
            format: 'DD-MM-YYYY',

        });
        this.deliveryreportdetailsList = [];
        this.applyDataTable();
    }
    extractData(id,spinnerId,ajaxDropdown,event){
    let term:any=$("#"+id).val();
    if(this.customerNames.length==0){
         if(term.length>3){
              term=term.substring(0,3);  
         }   
    }
    if(term.length ==3 && event.keyCode!=38 && event.keyCode!=40 && event.keyCode!=13){
        $("#"+spinnerId).show();
        let url:any=this.environment.getRequiredApi("find_customers")+"?org_id="+this.orgId+"&bp_id="+this.bpId+"&cust_name="+term+"&";
    this.commonService.getData(url, "GET", "", this.accessObjId).subscribe(response=>{
        if(response.status==0){
            this.customerNames=response["data"].ex_cust_list;
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
            setTimeout(()=>{
               $("#"+ajaxDropdown).find('ul').find('li:first').addClass('active');
               $("#"+ajaxDropdown).find('ul').find('li:first').focus();
            },100);
        }else{
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
        }
    });
    }else{
       if(term==""){
           this.customerNames=[];
           $("#"+spinnerId).hide();
           $("#filterCustomerId").val("");
       }else{
        if(event.keyCode!=13 && event.keyCode!=38 && event.keyCode!=40){
           var searchText=term;
           searchText=searchText.toUpperCase();
           $(".ajax-list").removeClass('active');
           $("#"+ajaxDropdown).find('ul > li').each(function(){
                var currentLiText = $(this).text();
                currentLiText=currentLiText.toUpperCase();
                 var showCurrentLi = currentLiText.indexOf(searchText) !== -1;
                $(this).toggle(showCurrentLi);
            });
           $("#"+ajaxDropdown).find('ul').find('li:visible').first().addClass('active');
           $("#"+ajaxDropdown).find('ul').find('li:visible').first().focus();
        }
       }
    }
    if(event.keyCode==38 || event.keyCode==40 || event.keyCode==13){
        $("#"+ajaxDropdown).find('ul > li').each(function(){
              if(event.keyCode==40){
                  if($(this).hasClass('active')){
                    console.log($(this).attr('class'));
                    if($(this).next().is(':visible')){
                        $(this).removeClass('active');
                        $(this).next().addClass('active');
                        $(this).next().focus();
                        $("#"+ajaxDropdown).find("ul").scrollTop($(this).position().top);
                        return false;
                      }
                 }
              } 
            if(event.keyCode==13){
                  if($(this).hasClass('active')){
                    $(this).click();
                 }
              } 
            if(event.keyCode==38){
                  if($(this).hasClass('active')){
                    if($(this).prev().is(':visible')){
                        $(this).removeClass('active');
                        $(this).prev().focus();
                        $(this).prev().addClass('active');
                        $("#"+ajaxDropdown).find("ul").scrollTop($(this).position().top);
                        return false;
                      }
                 }
              } 
        });
    }
}
selectedItem(response,modalBlock,textInput,hiddenInput){
    if(response.cust_name==null && response.cust_name==undefined){
        $("#"+textInput).val(response.cust_id);
    }else{
        let cutname:any=response.cust_id+"-"+response.cust_name;
        $("#"+textInput).val(cutname);    
    }
    
    $("#"+hiddenInput).val(response.cust_id);
    $("#"+modalBlock).hide();
}
    getpoReportDetails() {
        $('#loadingIcon').show();
        $("#black-overlay").show();
        let fromDate, toDate;
        let custArray = [];
        let custGrpArray = [];
        let matArray = [];
        let splittedFromDate = $("#frmDate").val().split("-");
        fromDate = splittedFromDate[2] + splittedFromDate[1] + splittedFromDate[0];
        let splittedToDate = $("#toDate").val().split("-");
        toDate = splittedToDate[2] + splittedToDate[1] + splittedToDate[0];
        let ship_to = $("#filterCustomerId").val();
        let url = this.environment.getRequiredApi('get_deliveryreport_details') + "?bp_id=" + this.bpId + "&org_id=" + this.orgId + "&from_date=" + fromDate + "&to_date=" + toDate + "&ship_to=" + ship_to+ "&";
        this.commonService.getData(url, 'GET', '', this.accessObjId)
            .subscribe((response) => {
                console.log(response);
                if (response.status == '1') {
                    this.deliveryreportdetailsList = [];
                    this.commonService.responseMessages('', response.message, 'warning');
                } else {
                    this.deliveryreportdetailsList = response.data.ex_delivery_list;
                    //  this.gstrdetailslength = Object.keys(this.gstrdetailsList).length;
                    var InvoiceTable = [];
                    var totqty = 0;
                    let data = response.data.ex_return;
                    if (response.data.hasOwnProperty("ex_return")) {
                        for (let index of data) {
                            if (index.type == "E") {
                                this.deliveryreportdetailsList = [];
                                this.gstrdetailslength = 0;
                                this.commonService.responseMessages('', index.message, 'warning');
                            }
                        }
                    }
                }
                $("#purchase-order-table").DataTable().destroy();
                this.applyDataTable();
                $('#loadingIcon').hide();
                $("#black-overlay").hide();
            }, err => {
                $('#loadingIcon').hide();
                $("#black-overlay").hide();
                console.log(err)
            });
 }

    changeTodatePicker(id) {
        $(id).datetimepicker("hide");
        this.poreportdetailsForm.controls['frmDate'].setValue($("#frmDate").val());
        if ($("#toDate").val() != "") {
            $("#toDate").datetimepicker("destroy");
        }
        var fromDateFilt = new Date();
        if ($("#frmDate").val().length != 0) {
            fromDateFilt = this.convertDate($("#frmDate").val())
        }
        $('#toDate').datetimepicker({
            widgetPositioning: {
                horizontal: 'left'
            },
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down",
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right'
            },
            format: 'DD-MM-YYYY',
            minDate: fromDateFilt
        });
    }

    public convertDate(date) {
        let dateArry = date.split("-");
        return new Date(dateArry[2], dateArry[1] - 1, dateArry[0]);
    }
    removeStyles() {
        this.poreportdetailsForm.controls['frmDate'].setValue($("#frmDate").val());
        this.poreportdetailsForm.controls['toDate'].setValue($("#toDate").val());
    }
    applyDataTable() {
        setTimeout(() => {
            $("#purchase-order-table").DataTable({
                retrieve: true,
                "order": [0],
                "language": {
                    "emptyTable": "No data available",
                    "info": "Showing page _PAGE_ of _PAGES_",
                    "infoFiltered": "(filtered from _MAX_ total records)"
                },
                "fnDrawCallback": function(oSettings) {
                    if (5 >= oSettings.fnRecordsDisplay()) {
                        $(oSettings.nTableWrapper).find('.dataTables_paginate').hide();

                        $(oSettings.nTableWrapper).find('.dataTables_info').hide();
                    } else {
                        $(oSettings.nTableWrapper).find('.dataTables_paginate').show();
                        $(oSettings.nTableWrapper).find('.dataTables_filter').show();
                        $(oSettings.nTableWrapper).find('.dataTables_info').show();
                        $(oSettings.nTableWrapper).find('.dataTables_length').show();

                    }
                },
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]
            });
            // $("#purchase-order-table").css("display", "table !important")
        }, 500);

        setTimeout(() => {
            $(".dataTables_scrollHeadInner").css({ "width": "100%" });
            $(".table ").css({ "width": "100%" });
            //$("#cust-info-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
        }, 1100);
    }
    exportExcel() {
        let jsonArrrayData: any = [];
        let count = 0;
        if (this.deliveryreportdetailsList.length != 0) {
            for (let index of this.deliveryreportdetailsList) {

                for (let items of this.deliveryreportdetailsList[count].item) {
                    let listObj: any = {};
                    if (!index.hasOwnProperty('del_num')) {
                        listObj.del_num = " ";
                    }
                    else {
                        listObj.del_num = index.del_num;
                    }
                    if (!index.hasOwnProperty('status')) {
                        listObj.status = "  "
                    }
                    else {
                        listObj.status = index.status;
                    }
                    if (!index.hasOwnProperty('doc_category')) {
                        listObj.doc_category = ' ';
                    }
                    else {
                        listObj.doc_category = index.doc_category;
                    }
                    if (!index.hasOwnProperty('del_date')) {
                        listObj.del_date = ' ';
                    }
                    else {
                        listObj.del_date = index.del_date;
                    }
                    if (!index.hasOwnProperty('ship_to')) {
                        listObj.ship_to = " ";
                    }
                    else {
                        listObj.ship_to = index.ship_to;
                    }

                    if (!items.hasOwnProperty('matnr')) {
                        listObj.matnr = " ";
                    }
                    else {
                        listObj.matnr = items.matnr;
                    }
                    if (!items.hasOwnProperty('arktx')) {
                        listObj.arktx = " ";
                    }
                    else {
                        listObj.arktx = items.arktx;
                    }

                    if (!items.hasOwnProperty('lfimg')) {
                        listObj.lfimg = " ";
                    }
                    else {
                        listObj.lfimg = items.lfimg;
                    }
                    if (!items.hasOwnProperty('charg')) {
                        listObj.charg = " ";
                    }
                    else {
                        listObj.charg = items.charg;
                    }
                    if (!items.hasOwnProperty('meins')) {
                        listObj.meins = " ";
                    }
                    else {
                        listObj.meins = items.meins;
                    }
                    if (!items.hasOwnProperty('vgbel')) {
                        listObj.vgbel = " ";
                    }
                    else {
                        listObj.vgbel = items.vgbel;
                    }

                    jsonArrrayData.push(listObj);
                }

                count++;
            }
            let columns: any = ['del_num', 'status', 'doc_category', 'del_date', 'ship_to', 'matnr', 'arktx', 'lfimg', 'charg', 'meins', 'vgbel']
            let columnHeaders: any = ['Del No', 'Status', 'Doc Category', 'Del Date', 'Ship To', 'Material', 'Description', 'Qty', 'Batch', 'UOM', 'SO No']
            let jsonData: any = JSON.stringify(jsonArrrayData);
            this.excelService.JSONToCSVConvertor(jsonArrrayData, "", "Delivery Item List", columns, columnHeaders, 'Delivery Item');

        } else {
            this.commonService.responseMessages("", "No Data Available To Export", "warning")
        }
    }
    navigateToRepGallery() {
        const path: any = "rptsgallery";
        this.router.navigate([path]);
    }
}