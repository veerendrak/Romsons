import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http, Headers, Response, RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { MessagePropertiesService } from '../../services/message-properties.service';
import { EnvConfigurationService } from '../../services/env-configuration.service';
import { ExcelService } from '../../services/excel.service';
declare var $: any;
declare var jQuery: any;

@Component({
    selector: 'app-goods-receipt-report',
    templateUrl: './goods-receipt-report.component.html',
    styleUrls: ['./goods-receipt-report.component.css']
})
export class GoodsReceiptReportComponent implements OnInit {
    public poreportdetailsForm: FormGroup;
    public bpId: string;
    public orgId: string;
    public accessObjId: string;
    public poreportdetailsList: any = [];
    public material: any;
    public ajaxDropdown = false;
    public screenType: any;
    public actionFlag: any;
    public customertypeList: any;
    public emptyFlag: boolean = false;
    public cdListLength: any;
    public gstrdetailslength: any;
    constructor(private http: Http, private formBuilder: FormBuilder, private environment: EnvConfigurationService,
        private router: Router, private ref: ChangeDetectorRef, private app: AppComponent, private messagesService: MessagePropertiesService,
        private commonService: CommonService, private excelService: ExcelService) {
        this.bpId = localStorage.getItem("bpId");
        this.orgId = localStorage.getItem("orgId");
        this.accessObjId = localStorage.getItem("Reports Gallery")
        this.poreportdetailsForm = new FormBuilder().group(
            {
                'frmDate': ['', Validators.required],
                'toDate': ['', Validators.required]
            }
        );
        this.actionFlag = true;
        this.poreportdetailsList = [];
        this.cdListLength = 0;
        this.gstrdetailslength = 0;
    }
    ngOnInit() {
        $('.datepicker-init').datetimepicker({
            widgetPositioning: {
                horizontal: 'left'
            },
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down",
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right'
            },
            format: 'DD-MM-YYYY',

        });
        this.poreportdetailsList = [];
        this.applyDataTable();
    }
    getgrReportDetails() {
        $('#loadingIcon').show();
        $("#black-overlay").show();
        let fromDate, toDate;
        let custArray = [];
        let custGrpArray = [];
        let matArray = [];
        let splittedFromDate = $("#frmDate").val().split("-");
        fromDate = splittedFromDate[2] + splittedFromDate[1] + splittedFromDate[0];
        let splittedToDate = $("#toDate").val().split("-");
        toDate = splittedToDate[2] + splittedToDate[1] + splittedToDate[0];
        let url = "";
        url = this.environment.getRequiredApi('get_grreport_details') + "?bp_id=" + this.bpId + "&org_id=" + this.orgId + "&from_date=" + fromDate + "&to_date=" + toDate + "&";
        this.commonService.getData(url, 'GET', '', this.accessObjId)
            .subscribe((response) => {
                console.log(response);
                if (response.status == '1') {
                    this.poreportdetailsList = [];
                    this.commonService.responseMessages('', response.message, 'warning');
                } else {
                    this.poreportdetailsList = response.data.ex_gr_report_list;
                    //  this.gstrdetailslength = Object.keys(this.gstrdetailsList).length;
                    let data = response.data.ex_return;
                    if (response.data.hasOwnProperty("ex_return")) {
                        for (let index of data) {
                            if (index.type == "E") {
                                this.poreportdetailsList = [];
                                this.gstrdetailslength = 0;
                                this.commonService.responseMessages('', index.message, 'warning');
                            }
                        }
                    }
                }
                $("#purchase-order-table").DataTable().destroy();
                this.applyDataTable();
                $('#loadingIcon').hide();
                $("#black-overlay").hide();
            }, err => {
                $('#loadingIcon').hide();
                $("#black-overlay").hide();
                console.log(err)
            });


    }
     changeTodatePicker(id) {
         $(id).datetimepicker("hide");
        
        this.poreportdetailsForm.controls['frmDate'].setValue($("#frmDate").val());
        if ($("#toDate").val() != "") {
            $("#toDate").datetimepicker("destroy");
        }
        var fromDateFilt=new Date();
        if($("#frmDate").val().length != 0){
            fromDateFilt = this.convertDate($("#frmDate").val())
        }
        $('#toDate').datetimepicker({

            widgetPositioning: {
                horizontal: 'left'
            },
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down",
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right'
            },
            format: 'DD-MM-YYYY',
            minDate: fromDateFilt
        });
    }
    
    public convertDate(date){
        let dateArry = date.split("-");
        return new Date(dateArry[2],dateArry[1]-1,dateArry[0]);
    }
   
    removeStyles() {
        this.poreportdetailsForm.controls['frmDate'].setValue($("#frmDate").val());
        this.poreportdetailsForm.controls['toDate'].setValue($("#toDate").val());
    }
    applyDataTable() {
        setTimeout(() => {
            $("#purchase-order-table").DataTable({
                retrieve: true,
                "bPaginate": false,
                "bInfo": false,
                "order": [0],
                "language": {
                    "emptyTable": "No data available",
                    "info": "Showing page _PAGE_ of _PAGES_",
                    "infoFiltered": "(filtered from _MAX_ total records)"
                },
                "fnDrawCallback": function(oSettings) {
                    if (5 >= oSettings.fnRecordsDisplay()) {
                        $(oSettings.nTableWrapper).find('.dataTables_paginate').hide();

                        $(oSettings.nTableWrapper).find('.dataTables_info').hide();
                    } else {
                        $(oSettings.nTableWrapper).find('.dataTables_paginate').show();
                        $(oSettings.nTableWrapper).find('.dataTables_filter').show();
                        $(oSettings.nTableWrapper).find('.dataTables_info').show();
                        $(oSettings.nTableWrapper).find('.dataTables_length').show();

                    }
                },
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]
            });
            // $("#purchase-order-table").css("display", "table !important")
        }, 500);

        setTimeout(() => {
            $(".dataTables_scrollHeadInner").css({ "width": "100%" });
            $(".table ").css({ "width": "100%" });
            //$("#cust-info-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
        }, 1100);
    }
    exportExcel() {
        let jsonArrrayData: any = [];
        let count = 0;
        if (this.poreportdetailsList.length != 0) {
            for (let index of this.poreportdetailsList) {
                for (let items of this.poreportdetailsList[count].gr_item_details) {
                    let listObj: any = {};
                    if (!index.hasOwnProperty('gr_num')) {
                        listObj.gr_num = " ";
                    }
                    else {
                        listObj.gr_num = index.gr_num;
                    }
                    if (!index.hasOwnProperty('status')) {
                        listObj.status = "  "
                    }
                    else {
                        listObj.status = index.status;
                    }
                    if (!index.hasOwnProperty('vendor_name')) {
                        listObj.vendor_name = ' ';
                    }
                    else {
                        listObj.vendor_name = index.vendor_name;
                    }
                    if (!index.hasOwnProperty('gr_date')) {
                        listObj.gr_date = ' ';
                    }
                    else {
                        listObj.gr_date = index.gr_date;
                    }
                    if (!items.hasOwnProperty('material')) {
                        listObj.material = " ";
                    }
                    else {
                        listObj.material = items.material;
                    }
                    if (!items.hasOwnProperty('mat_desc')) {
                        listObj.mat_desc = " ";
                    }
                    else {
                        listObj.mat_desc = items.mat_desc;
                    }
                    if (!items.hasOwnProperty('entry_qnt')) {
                        listObj.entry_qnt = " ";
                    }
                    else {
                        listObj.entry_qnt = items.entry_qnt;
                    }
                    if (!items.hasOwnProperty('entry_uom')) {
                        listObj.entry_uom = " ";
                    }
                    else {
                        listObj.entry_uom = items.entry_uom;
                    }
                    if (!items.hasOwnProperty('plant')) {
                        listObj.plant = " ";
                    }
                    else {
                        listObj.plant = items.plant;
                    }
                    if (!items.hasOwnProperty('stge_loc')) {
                        listObj.stge_loc = " ";
                    }
                    else {
                        listObj.stge_loc = items.stge_loc;
                    }
                    if (!items.hasOwnProperty('po_number')) {
                        listObj.po_number = " ";
                    }
                    else {
                        listObj.po_number = items.po_number;
                    }
                    if (!items.hasOwnProperty('batch')) {
                        listObj.batch = " ";
                    }
                    else {
                        listObj.batch = items.batch;
                    }
                    jsonArrrayData.push(listObj);
                }

                count++;
            }
            let columns: any = ['gr_num', 'status', 'vendor_name', 'gr_date', 'material', 'mat_desc', 'entry_qnt', 'entry_uom', 'plant', 'stge_loc', 'po_number', 'batch']
            let columnHeaders: any = ['GR No', 'Status', 'Vendor Name', 'GR Date', 'Material', 'Description', 'Qty', 'UOM', 'Plant', 'Stor Loc', 'PO No', 'Batch']
            let jsonData: any = JSON.stringify(jsonArrrayData);
            this.excelService.JSONToCSVConvertor(jsonArrrayData, "", "GR List", columns, columnHeaders, 'GR');

        } else {
            this.commonService.responseMessages("", "No Data Available To Export", "warning")
        }
    }
    navigateToRepGallery() {
        const path: any = "rptsgallery";
        this.router.navigate([path]);
    }
    showFilters(){
        $("#filter-block").slideToggle();  
    }
}