import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http , Headers, Response,RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { MessagePropertiesService } from '../../services/message-properties.service';

declare var $: any; 
declare var jQuery: any;
declare var swal: any;


@Component({
  selector: 'app-goods-receipt-details',
  templateUrl: './goods-receipt-details.component.html',
  styleUrls: ['./goods-receipt-details.component.css']
})
export class GoodsReceiptDetailsComponent implements OnInit {

  checked:boolean=false;
  indeterminate:boolean=false;
  constructor(private http: Http, private formBuilder: FormBuilder,
          private router: Router,private ref: ChangeDetectorRef,private app:AppComponent, private messagesService:MessagePropertiesService,
          private commonService:CommonService) {
      this.app.isActive=true;
      this.checked=false;
      this.indeterminate=false;
  }

  ngOnInit() {
      
      $("#goods-receipt-order-table").DataTable({
         // bSort:false,
        //  bPaginate:false,
          "order": [0],
          "language": {
              "emptyTable": "No data available",
              "info": "Showing page _PAGE_ of _PAGES_",
              "infoFiltered": "(filtered from _MAX_ total records)"
            },
         //  "bInfo":false,
         //  "bFilter":false,
           "fnDrawCallback": function( oSettings ) {
                        if ( 10 >= oSettings.fnRecordsDisplay() ) {
                            $( oSettings.nTableWrapper ).find( '.dataTables_paginate' ).hide();
                             
                            $( oSettings.nTableWrapper ).find( '.dataTables_info' ).hide();
                        } else {
                            $( oSettings.nTableWrapper ).find( '.dataTables_paginate' ).show();
                              $(oSettings.nTableWrapper).find('.dataTables_filter').show();
                            $( oSettings.nTableWrapper ).find( '.dataTables_info' ).show();
                              $(oSettings.nTableWrapper).find('.dataTables_length').show();
                        }
                    },
           "columnDefs": [ {
                "targets"  : 'no-sort',
                "orderable": false,
               } ]
           
      });
      setTimeout(() =>{
          $(".dataTables_scrollHeadInner").css({"width":"100%"});
          $(".table ").css({"width":"100%"});
          $("#goods-receipt-order-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
          },1100);
      if($('body').hasClass('cat__menu-left--visible')){
          $(".outbound-footer").css("width","78.4%");
      }else{
          $(".outbound-footer").css("width","93.2%");
      }
      setTimeout(()=>{
          var width=$("#mainContent").css("width");
          $(".outbound-footer").css("width",width);
          $(".outbound-footer").show();
      },50);
  }
  selectAll(event,checkAll,tableId){
      setTimeout(()=>{
          this.commonService.selectAllCheckBoxes(checkAll,tableId)
      },300);
  }
  getReportList(event,tableId){
      setTimeout(()=>{let flag:boolean=this.commonService.checkAction(tableId);
      if(flag){
          this.indeterminate=false;
          this.checked=true;
      }else{
          this.indeterminate=true;
      }
      },400);
      
  }
  createGoodsReceipt(type){
          this.commonService.saleType='Create';
          const path:any="goodsreceiptdetails/goodsreceipt";
          this.router.navigate([path]);
  } 
  editGoodsReceipt(){
      this.commonService.saleType='Edit';
      const path:any="goodsreceiptdetails/goodsreceipt";
      this.router.navigate([path]);
  }

printSelectedReports(value){}

}
