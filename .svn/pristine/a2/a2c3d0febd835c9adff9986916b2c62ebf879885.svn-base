import { Component, OnInit, Input,Output, EventEmitter,ChangeDetectorRef} from '@angular/core';
import { Http , Headers, Response,RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router,ActivatedRoute, Params} from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { DateAdapter } from '@angular/material';
import { MessagePropertiesService } from '../../services/message-properties.service'; 
import {EnvConfigurationService} from '../../services/env-configuration.service';

declare var $: any; 
declare var jQuery: any;
declare var swal: any;

@Component({
  selector: 'app-sales-order',
  templateUrl: './sales-order.component.html',
  styleUrls: ['./sales-order.component.css']
})
export class SalesOrderComponent implements OnInit {
    salesOrderForm:FormGroup;
    @Output()
    @Input() salesSeries:any=""; 
    title:any;
    createSalesBlock:boolean=true;
    outboundDeliberyBlock:boolean=false;
    billingBlock:boolean=false;
    postGoodsBlock:boolean=false;
    showOrderType:boolean;  
    salesOrderMessage:any;
    formResetFlag:boolean=false;
    orderType:any;
    customerId:any;
    bpId:any;
    orgId:any;
    accessObjectId:any;
    payload:any;
    customerList:any;
  constructor(private http: Http, private formBuilder: FormBuilder,
          private router: Router,private ref: ChangeDetectorRef,private app:AppComponent,private messagesService:MessagePropertiesService,
          private commonService:CommonService,private dateAdapter: DateAdapter<Date>,private activatedRoute:ActivatedRoute,
          private environment:EnvConfigurationService) {
      this.app.isActive=true;
      this.dateAdapter.setLocale('en-gb');
      this.salesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
          'soldToParty' : ['', Validators.required]
        });
      this.createSalesBlock=true;
      this.showOrderType =commonService.showOrderType;
      this.salesOrderMessage = messagesService.sales_order_details_msg;
      this.bpId=localStorage.getItem("bpId");
      this.orgId=localStorage.getItem("orgId");
      this.accessObjectId=localStorage.getItem("Sales Order");
      this.payload={};
      if(this.router.url=='/billing'){
          this.commonService.saleType='Create';
          this.navigatePath("billing");
      }
      if(this.router.url=='/outbounddelivery'){
          this.commonService.saleType='Create';
          this.navigatePath("outbounddelivery");
      }
       
  }

  ngOnInit() {
      this.payload["address"]=true;
      this.payload["bp_id"]=this.bpId;
      this.payload["compliance"]=true;
      this.payload["incoterms"]=true;
      this.payload["org_id"]=this.orgId;
      this.payload["promotion"]=true;
      this.activatedRoute.queryParams.subscribe(params => {
          if(params['action']=="C"){
              this.title="Sales Order / New";
          }else{
              this.title="Sales Order / Edit";
          }
          this.orderType=params["orderType"];
          this.customerId=params["custId"];
          this.payload["cust_id"]=this.customerId;
          this.getCustomerDetails();
      });
      
      if($('body').hasClass('cat__menu-left--visible')){
          $(".ell-spa").removeAttr("style");
      }else{
          $(".ell-spa").attr("style","width:340px");
      }
      setTimeout(()=>{
          var width=$("#mainContent").css("width");
          $(".outbound-footer").css("width",width);
      },100);
      
      
  }
  navigatePath(path){
      if(path=='billing'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=false;
          this.billingBlock=true;
          this.formResetFlag = true;
      }
      if(path=='outbounddelivery'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=true;
          this.postGoodsBlock=false;
          this.billingBlock=false;
          this.formResetFlag = true;
      }
      if(path=='createsalesorder'){
          this.createSalesBlock=true;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=false;
          this.billingBlock=false;
          this.formResetFlag = true;
          setTimeout(()=>{
              var width=$("#mainContent").css("width");
              $(".outbound-footer").css("width",width);
          },50);
          
      }
      if(path=='postgoodsissue'){
          this.createSalesBlock=false;
          this.outboundDeliberyBlock=false;
          this.postGoodsBlock=true;
          this.billingBlock=false;
          this.formResetFlag = true;
      }
      if(this.formResetFlag){
      this.salesOrderForm.reset();    
      }
  }
  getCustomerDetails(){
      $('#loadingIcon').show();
      $("#black-overlay").show();
      let url:any=this.environment.getRequiredApi("get_customer_details")+"?";
      this.commonService.getData(url, "POST", this.payload, this.accessObjectId).subscribe(response=>{
          if(response.status==0){
             this.customerList=response["data"];
          }else{
              this.commonService.responseMessages("", response.message, "warning");
          }
          $('#loadingIcon').hide();
          $("#black-overlay").hide();
      })
  }
    
   
       
}
