import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http, Headers, Response, RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router, ActivatedRoute, Params} from '@angular/router';
import { EnvConfigurationService } from '../../services/env-configuration.service';
import { CommonService } from '../../services/common.service';
import { MessagePropertiesService } from '../../services/message-properties.service';
import { AppComponent } from '../../app.component';

declare var $: any;
declare var jQuery: any;
declare var swal: any;


@Component({
    selector: 'app-customer-details',
    templateUrl: './customer-details.component.html',
    styleUrls: ['./customer-details.component.css']
})
export class CustomerDetailsComponent implements OnInit {

    customerDetailsForm: FormGroup;
    customerDetailMsg: any;
    url: string;
    states: any;
    bpId: any;
    orgId: any;
    cust_type: any;
    accessObjectId: any;
    customerpayload: any;
    cust_id: any;
    cdlist: any = [];
    public payload: any;
    title: any;
    displayFlag: any;
    cdListLength: any;
    public customertypeList: any;
    public typeListid: any = {};
    public emptyFlag: boolean = false;
    constructor(private http: Http, private formBuilder: FormBuilder, private environment: EnvConfigurationService,
        private commonService: CommonService, private messagesService: MessagePropertiesService,
        private router: Router, private activatedRoute: ActivatedRoute, private ref: ChangeDetectorRef, private app: AppComponent) {
        this.app.isActive = true;

        this.bpId = localStorage.getItem("bpId");
        this.orgId = localStorage.getItem("orgId");
        this.accessObjectId = localStorage.getItem("Customer Details");
        this.cdListLength = 0;
        this.customerDetailsForm = new FormBuilder().group(
            {

                'cust_type': ['', Validators.required],
                'cust_name': ['', Validators.required],
                'telephone': ['', [Validators.required, Validators.pattern('^[789]{1}[0-9]{9}$')]],
                'email': ['', [Validators.required, Validators.pattern('^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$')]],
                'credit_limit': ['0', [Validators.required]],
                'status': ['', Validators.required],

                //   'reg_type': ['', Validators.required],
                'gstin': ['', [Validators.required]],
                'panno': ['', [Validators.required, Validators.pattern('^[A-Z]{5}[0-9]{4}[A-Z]{1}$')]],
                'dl_no': ['', Validators.required],

                // 'bank_name': ['', Validators.required],
                //'ifsc': ['', Validators.required],
                //'account_no': ['', Validators.required],

                'dno': ['', Validators.required],
                // 'area': ['', Validators.required],
                'street': ['', Validators.required],
                'city': ['', Validators.required],
                // 'mandal': ['', Validators.required],
                'district': ['', Validators.required],
                'state': ['', Validators.required],
                'pin_code': ['', [Validators.required, Validators.pattern('^[1-9][0-9]{5}$')]]



            }
            /* gstnum*Validators.pattern( '^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[0-9]{1}[Z][0-9A-Z]{1}$' )]*/
        );



        this.customerDetailMsg = messagesService.customer_details_msg;

        this.activatedRoute.queryParams.subscribe(params => {

            if (params['action'] == "DIS") {
                this.title = " / Display";
                this.displayFlag = true;
            }
            this.cust_id = params["customerid"];

            this.getCustomerDetails();


        });
    }

    ngOnInit() {
        this.getCustomertypesList();
        setTimeout(() => {
            var width = $("#mainContent").css("width");
            $(".outbound-footer").css("width", width);
        }, 50);
        let stateUrl: any = this.environment.getRequiredApi("dropdown_list_byid") + "?";
        stateUrl = stateUrl.replace("{obj_name}", "states");
        stateUrl = stateUrl.replace("{obj_id}", 1);
        this.commonService.getData(stateUrl, "GET", "", this.accessObjectId).subscribe((response) => {
            if (response.status == 0) {
                this.states = response["data"].objs;
            }
        });
    }
    getCustomertypesList() {

        let url = this.environment.getRequiredApi('header_dropdown') + "?group=CUSTTYPS&";

        this.commonService.getData(url, "GET", '', "")
            .subscribe((response) => {
                console.log(response);
                this.customertypeList = response.data.configValues;
                //                let headerList = this.customertypeList;
                //                for (let index in headerList) {
                //                    this.typeListid[headerList[index].key] = "";
                //
                //                }
                this.emptyFlag = false;
            });
    }
    saveCustomerDetails() {
        $("#loadingIcon").show();
        $("#black-overlay").show();
        console.log(this.customerDetailsForm.value);

        this.url = this.environment.getRequiredApi('customer_manage') + "?";
        this.customerpayload = this.customerDetailsForm.value;
        this.customerpayload.bp_id = this.bpId;
        this.customerpayload.org_id = this.orgId;
        this.customerpayload.action = "C";
        this.customerpayload.cust_type = $('#cust_type').val() + "," + $('#cust_type option:selected').text().trim();
        let stateval:any=$('#state_id option:selected').text()
        this.customerpayload.state = $('#state_id').val() + "," + stateval.trim();
        this.commonService.getData(this.url, "POST", this.customerpayload, this.accessObjectId).subscribe((response) => {
            if (response.status == 1) {
                $("#loadingIcon").hide();
                $("#black-overlay").hide();
                this.commonService.responseMessages('', response.message, 'warning');
            } else {
                $("#loadingIcon").hide();
                $("#black-overlay").hide();
                this.commonService.responseMessages('', response.message, 'success');
                this.customerDetailsForm.reset();
            }

        });

    }
    getCustomerDetails() {
        $('#loadingIcon').show();
        $("#black-overlay").show();
        let response: any = {}
        response["address"] = true;
        response["bp_id"] = this.bpId;
        response["compliance"] = true;
        response["incoterms"] = true;
        response["org_id"] = this.orgId;
        response["cust_id"] = this.cust_id;
        let url: any = this.environment.getRequiredApi("get_customer_details") + "?";
        this.commonService.getData(url, "POST", response, this.accessObjectId).subscribe(response => {
            $('#loadingIcon').hide();
            $("#black-overlay").hide();
            if (response.status == 0) {
                this.cdlist = response["data"];
                this.cdListLength = Object.keys(this.cdlist).length;
                console.log(this.cdlist);

                // this.customerDetailsForm.setValue( obj );
            } else {
                this.commonService.responseMessages("", response.message, "warning");
            }
        })
    }
    redirectCustomerlist() {
        const path: any = 'custdet';
        this.router.navigate([path]);
    }
}
