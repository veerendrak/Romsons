import { Component, OnInit, ChangeDetectorRef } from '@angular/core';
import { Http , Headers, Response,RequestOptions } from '@angular/http';
import { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';
import { Router } from '@angular/router';
import { AppComponent } from '../../app.component';
import {CommonService} from '../../services/common.service';
import { ExcelService } from '../../services/excel.service';
import { MessagePropertiesService } from '../../services/message-properties.service';
import {EnvConfigurationService} from '../../services/env-configuration.service';
import {Observable} from 'rxjs/Observable';
import {of} from 'rxjs/observable/of';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/debounceTime';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/switchMap';
import 'rxjs/add/operator/merge';


declare var $: any; 
declare var jQuery: any;
declare var swal: any;

@Component({
  selector: 'app-sales-order-details',
  templateUrl: './sales-order-details.component.html',
  styleUrls: ['./sales-order-details.component.css']
})
export class SalesOrderDetailsComponent implements OnInit {
    createSalesOrderForm:FormGroup;
    filterSalesOrderForm:FormGroup;
    createSalesOrderPage:boolean=false;
    salesOrderDetails:boolean=false;
    saleType:any;
    checked:boolean=false;
    indeterminate:boolean=false;
    saleOrderMessages:any;
    bpId:any;
    orgId:any;
    accessObjectId:any;
    fromRange:any;
    toRange:any;
    sortBy:any;
    paginationCount:any;
    paginationArray:any;
    startIndex:any;
    endIndex:any;
    totalEndCount:any;
    sortOrder:any;
    sortNum:any;
    searchFilterByMaterialCd:any;
    salesListPayload:any;
    salesOrderDetailsList:any;
    salesOrderDetailslength:any;
    customerNames:any;
    model: any;
    clickedItem:any;
    searching = false;
    searchFailed = false;
    hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);
    dataTableRowsCount:any;
    orderTypes:any;
    salesDocArray:any;
    printOrderNum:any;
    checkboxLength:any;
    shipToNum:any;
    cancelPayload:any;
  constructor(private http: Http, private formBuilder: FormBuilder,
          private router: Router,private ref: ChangeDetectorRef,private app:AppComponent, private messagesService:MessagePropertiesService,
          private commonService:CommonService,private environment:EnvConfigurationService,private excelService: ExcelService) {
      this.app.isActive=true;
      this.salesOrderDetails=true;
      this.createSalesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
          'customer'   : ['', Validators.required],
          'orderType' : ['', Validators.required], 
        });
      this.filterSalesOrderForm = formBuilder.group({
          hideRequired: false,
          floatLabel: 'auto',
          'custName'   : ['', Validators.required],
          'fromDate' : ['', Validators.required], 
          'toDate' : ['', Validators.required], 
          'status' : ['', Validators.required], 
        });
      this.checked=false;
      this.indeterminate=false;
      this.saleOrderMessages = messagesService.sales_order_details_msg;
      this.bpId=localStorage.getItem("bpId");
      this.orgId=localStorage.getItem("orgId");
      this.accessObjectId=localStorage.getItem("Sales Order");
      this.fromRange=1;
      this.toRange=100;
      this.sortBy=null;
      this.paginationArray=[];
      this.sortOrder="asc";
      this.sortBy="";
      this.sortNum=1;
      this.salesListPayload={};
      this.salesOrderDetailsList=[];
      this.salesOrderDetailslength=0;
      this.customerNames=[];
      this.orderTypes=[];
      this.salesDocArray=null;
      this.shipToNum="";
      this.checkboxLength=0;
      this.printOrderNum="";
      this.cancelPayload={};
  }
  ngOnInit() {
      this.salesDocArray=null;
          $( '.datepicker-init-sale' ).datetimepicker( {
              widgetPositioning: {
                  horizontal: 'left'
              },
              icons: {
                  time: "fa fa-clock-o",
                  date: "fa fa-calendar",
                  up: "fa fa-arrow-up",
                  down: "fa fa-arrow-down",
                  previous: 'fa fa-arrow-left',
                  next: 'fa fa-arrow-right'
              },
              format: 'DD/MM/YYYY',
          } );
      this.salesListPayload['bp_id']=this.bpId;
      this.salesListPayload['cust_id']=null;
      this.salesListPayload['from_date']=null;
      this.salesListPayload['org_id']=this.orgId;
      this.salesListPayload['status']=null;
      this.salesListPayload['to_date']=null;
      this.getsalesOrderList();
      $(function(){
          /*$('#cust-name').change(function(){
              var value=$('#customerNamesList option[value="'+$("#cust-name").val()+'"]').text().trim();
              $("#filterCustomerId").val(value);
          });
          $('#modal-name').change(function(){
              var value=$('#customerNamesBlock option[value="'+ $('#modal-name').val() +'"]').text().trim();
              $("#modal-searchInput").val(value);
          });*/
          
      });
      $(()=>{
          $("#export").click(()=>{
              $('#loadingIcon').show();
              $("#black-overlay").show();
              $("#sales-order-table").DataTable().destroy();
              $("#sales-order-table").table2excel({
                  exclude: ".table",
                  name: "Sales order List",
                  filename: "SO_LIST.xls" //do not include extension
              });
              this.applyDataTable();
              $('#loadingIcon').hide();
              $("#black-overlay").hide();
          }) 
      });
      let orderTypesUrl:any=this.environment.getRequiredApi("dropdown_list_byid")+"?";
      orderTypesUrl=orderTypesUrl.replace("{obj_name}","sapdocs");
      orderTypesUrl=orderTypesUrl.replace("{obj_id}","ORD");
      this.commonService.getData(orderTypesUrl, "GET", "", this.accessObjectId).subscribe(response=>{
         if(response.status==0){
             this.orderTypes=response["data"].objs;
         } 
      });
  }
  createSalesOrder(type){
      this.commonService.saleType='Create';
       this.commonService.showOrderType=false;
      $("#createSalesModal").modal("show");
  }
  closeModal(id){
      $("#"+id).modal("hide");
      this.createSalesOrderForm.reset();
  }
  createSalesForm(id){
      $("#"+id).modal("hide");
      const path:any="salesorder/createsalesorder";
      let orderType:any=$("#orderTypes").val();
      let custId:any=$("#modal-searchInput").val();
      this.router.navigate([path],{ queryParams: {"orderType":orderType,"custId":custId,"action":"C"} });
  }
  editSalesOrder(type){
      if(this.checkboxLength>1 || this.checkboxLength==0){
          this.commonService.responseMessages("","Please select only one sales order", "warning");
           return false;
       }else{
          if(this.checkboxLength==1){
              this.commonService.saleType='Edit';
              const path:any="salesorder/editsalesorder";
              this.router.navigate([path],{ queryParams: {"orderNum":this.salesDocArray,"action":"U"} });
          } 
       }
      
  }
  displayDetails(ordNum){
      this.commonService.saleType='Display';
      const path:any="salesorder/editsalesorder";
      this.router.navigate([path],{ queryParams: {"orderNum":ordNum,"action":"DIS"} });
  }
 
  selectAll(event,checkAll,tableId){
      setTimeout(()=>{
          this.commonService.selectAllCheckBoxes(checkAll,tableId);
          if($("#checkbox-all-input").is(":checked")){
            this.checkboxLength=100;    
          }else{
            this.checkboxLength=0;   
            this.salesDocArray=null;   
          }
      },300);
  }
  getReportList(response,tableId,i){
      this.shipToNum=response.ship_to_num;
      setTimeout(()=>{let flag:boolean=this.commonService.checkAction(tableId);
      if(flag){
          this.indeterminate=false;
          this.checked=true;
      }else{
          this.indeterminate=true;
      }
      },400);
      setTimeout(()=>{
          if($("#checkbox-"+i+"-input").is(":checked")){
              this.printOrderNum=response.sales_doc;
              if(this.salesDocArray==null || this.salesDocArray==""){
                  this.salesDocArray=response.sales_doc;
              }else{
                  this.salesDocArray=this.salesDocArray+","+response.sales_doc;
              }
              this.checkboxLength++;
          }else{
              this.printOrderNum="";
              if(this.salesDocArray.includes(",")){
                  this.salesDocArray=this.salesDocArray.replace(response.sales_doc,"");
                  this.salesDocArray=this.salesDocArray.replace(/^,|,$/g,'');
              }else{
                  this.salesDocArray=""; 
              }
              this.checkboxLength=parseInt(this.checkboxLength)-1;
              setTimeout(()=>{let flag:boolean=this.commonService.continueAction(tableId);
              if(flag){
                  this.indeterminate=false;
                  this.checked=false;
              }else{
                  this.indeterminate=true;
              }
              },200);
          }
          
      },300);
      
  }
  printSelectedReports(type){
      let flag:boolean=this.commonService.continueAction(type);
      if(flag){
          this.commonService.responseMessages("","Please select atleast one sales order", "warning");
          return false
      }
  }
  getsalesOrderList(){
      $("#sales-table").hide();
      $('#loadingIcon').show();
      $("#black-overlay").show();
      let url:any=this.environment.getRequiredApi("get_sales_order_list")+"?"
      this.commonService.getData(url, "POST", this.salesListPayload, this.accessObjectId).subscribe((response)=>{
          if(response.status==0){
              this.salesOrderDetailsList=response["data"].ex_so_list;
              this.salesOrderDetailslength=this.salesOrderDetailsList.length;  
          }else{
              this.salesOrderDetailsList=[];
              this.salesOrderDetailslength=this.salesOrderDetailsList.length; 
              this.commonService.responseMessages("", response.message, "warning")
          }
          
          $("#sales-order-table").DataTable().destroy();
          $('#loadingIcon').hide();
          $("#black-overlay").hide();
          this.applyDataTable();
            
      });
  }
  applyDataTable(){
      setTimeout(()=>{
          var table = $('#sales-order-table').DataTable({
             "order": [[1,'asc']],
             retrieve:true,
             "language": {
                 "emptyTable": "No data available",
                 "info": "Showing page _PAGE_ of _PAGES_",
                 "infoFiltered": "(filtered from _MAX_ total records)",
                 "searchPlaceholder" : "Search..."
               },
             columnDefs: [ {
                          "targets": 'no-sort',
                           "orderable": false
                     } ],
             "fnDrawCallback": function(oSettings) {
                 if (10 >= oSettings.fnRecordsDisplay()) {
                   $(oSettings.nTableWrapper).find('.dataTables_paginate').hide();
              //     $(oSettings.nTableWrapper).find('.dataTables_filter').hide();
                   $(oSettings.nTableWrapper).find('.dataTables_info').hide();
                   //$(oSettings.nTableWrapper).find('.dataTables_length').hide();
                 } else {
               $(oSettings.nTableWrapper).find('.dataTables_paginate').show();
             //    $(oSettings.nTableWrapper).find('.dataTables_filter').show();
                 $(oSettings.nTableWrapper).find('.dataTables_info').show();
                   //  $(oSettings.nTableWrapper).find('.dataTables_length').show();
                 }
               },
                   });
          this.dataTableRowsCount = table.page.info().recordsTotal;
          console.log(this.dataTableRowsCount+'-------');
          $('#sales-order-table_filter input').val();
          $("#searchStock").remove();
          $("#sales-order-table_filter").append("<i class='fa fa-search searchStock' id='searchStock'></i>");
          $("#sales-table").show();
          setTimeout(()=>{
              var width=$("#mainContent").css("width");
              $(".outbound-footer").css("width",width);
              $(".outbound-footer").show();
          },50);
      },500);
      setTimeout(() =>{
          $(".dataTables_scrollHeadInner").css({"width":"100%"});
          $(".table ").css({"width":"100%"});    
          },600);
  }
  
getFilterData(){
    this.salesListPayload['cust_id']=$("#filterCustomerId").val();
    this.salesListPayload['from_date']=$("#from-date").val();
    this.salesListPayload['status']=$("#status-sales").val();
    this.salesListPayload['to_date']=$("#to-date").val();
    this.getsalesOrderList();
}
extractData(id,spinnerId,ajaxDropdown){
    let term:any=$("#"+id).val();
    if(term.length ==3){
        $("#"+spinnerId).show();
        let url:any=this.environment.getRequiredApi("find_customers")+"?org_id="+this.orgId+"&bp_id="+this.bpId+"&cust_name="+term+"&";
    this.commonService.getData(url, "GET", "", this.accessObjectId).subscribe(response=>{
        if(response.status==0){
            this.customerNames=response["data"].ex_cust_list;
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
        }else{
            $("#"+spinnerId).hide();
            $("#"+ajaxDropdown).show();
        }
       
    });
    }else{
       if(term==""){
           this.customerNames=[];
           $("#"+spinnerId).hide();
       } 
    }
}
createDelievry(id){
    if(this.checkboxLength>1 || this.checkboxLength==0){
        this.commonService.responseMessages("","Please select only one sales order", "warning");
         return false;
     }else{
        if(this.checkboxLength==1){
            this.commonService.saleType='Create';
            const path:any="obd/createdelivery";
            let orderType:any=$("#orderTypes").val();
            let custId:any=$("#modal-searchInput").val();
            this.router.navigate([path],{ queryParams: {"orderNum":this.salesDocArray,"action":"C"} });
        } 
     }
    
}
salesOrderListPrint(){
    if(this.checkboxLength>1 || this.checkboxLength==0){
       this.commonService.responseMessages("","Please select only one sales order", "warning");
        return false;
    }else{
       if(this.checkboxLength==1){
           let url:any=this.environment.getRequiredApi("print_sale_order")+"?org_id="+this.orgId+"&bp_id="+this.bpId+"&im_v_vbeln="+this.salesDocArray+"&im_v_kunnr="+this.shipToNum+"&access_obj_id="+this.accessObjectId+"&access_token="+localStorage.getItem("token");
           window.open(url,'_blank');
       } 
    }
   
   }
exportToExcel() {
  }
    
    
  cancelSalesOrder(tableId){
      
        let object = "SO";
        let selectedSalesOrders:any = [];
        this.cancelPayload["bp_id"]=this.bpId;
        this.cancelPayload["object"]="SO";
        this.cancelPayload["org_id"]=this.orgId;
        
        $('#sales-order-table input:checked').each(function() {
            selectedSalesOrders.push($(this).closest('tr').find("#so_no").find('a').text());
        });
        console.log(selectedSalesOrders);
         this.cancelPayload["object_nums"]=selectedSalesOrders;
        console.log(this.cancelPayload);
        
        if(this.checkboxLength==0){
           this.commonService.responseMessages("","Please select at least one sales order", "warning");
            return false;
        }else{
               let url:any=this.environment.getRequiredApi("cancel_sales_order")+"?";
                this.commonService.getData(url, "POST", this.cancelPayload, this.accessObjectId).subscribe(response=>{
               console.log(response)
                 if (response.status == 0) {
                   let respID = response.id;
                   this.extRet = response.ex_return;
                  //this.errorLogs= data.ex_return;
                   if(response.data.hasOwnProperty("ex_return")){
                      for(let index of response.data.ex_return){
                        if (index.type=="E") {
                                this.errorLogs = response.data.ex_return;
                            $("#cancel-sales-order").modal("show");
                            return false;
                        }
                        }
                      
               }
                 this.commonService.responseMessages("","Sales Order cancelled", "success");   
              }   
                
                    
                    
                    
                    
                    
             
               if (response.status == 1) {
                    this.commonService.responseMessages("",response.message, "warning");
               }

            });
               //window.open(url,'_blank');
        } 
    
    } 
  exportExcel(){
      let count:any=0;
  let jsonArrrayData:any=[];
      for(let index of this.salesOrderDetailsList){
          if(!index.hasOwnProperty('del_order')){
              index.del_order='--';
          }
          if(!index.hasOwnProperty('po_num')){
              index.po_num='--';
          }
          if(!index.hasOwnProperty('doc_date')){
              index.doc_date='--';
          }
          if(!index.hasOwnProperty('doc_type')){
              index.doc_type='--';
          }
          if(!index.hasOwnProperty('doc_type_desc')){
              index.doc_type_desc='--';
          }
          if(!index.hasOwnProperty('po_num')){
              index.po_num='--';
          }
          if(!index.hasOwnProperty('po_date')){
              index.po_date='--';
          }
          if(!index.hasOwnProperty('req_del_date')){
              index.req_del_date='--';
          }
          if(!index.hasOwnProperty('sales_doc')){
              index.sales_doc='--';
          }
          if(!index.hasOwnProperty('ship_to_name')){
              index.ship_to_name='--';
          }
          if(!index.hasOwnProperty('ship_to_num')){
              index.ship_to_num='--';
          }
          if(!index.hasOwnProperty('sold_to_name')){
              index.sold_to_name='--';
          }
          if(!index.hasOwnProperty('sold_to_num')){
              index.sold_to_num='--';
          }
          if(!index.hasOwnProperty('status')){
              index.status='--';
          }
          if(!index.hasOwnProperty('total_amt')){
              index.total_amt='--';
          }
          jsonArrrayData.push(index);
          
      }
      let jsonData:any=JSON.stringify(jsonArrrayData);
      this.excelService.JSONToCSVConvertor(jsonArrrayData, "", "Sales orders list");
  }
selectedItem(response,modalBlock,textInput,hiddenInput){
    $("#"+textInput).val(response.cust_name);
    $("#"+hiddenInput).val(response.cust_id);
    $("#"+modalBlock).hide();
}
}

